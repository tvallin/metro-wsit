<?xml version="1.0"?>
<!--

    Copyright (c) 2011, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<project name="Metro on GlassFish" default="help" basedir=".">
    <property environment="env"/>
    <property name="as.home" value="${@as.home.env.string@}"/>
    <property name="as.lib.home" value="${as.home}/modules"/>
    <property name="backup.dir" value="${as.home}/.metro-${project.version}"/>
    <property name="osgi.cache.dir" value="${as.home}/domains/domain1/osgi-cache"/>

    <condition property="notInstalled">
        <not>
            <available file="${backup.dir}"/>
        </not>
    </condition>

    <condition property="as.home.exists">
        <available file="${as.home}" type="dir"/>
    </condition>

    <condition property="glassfish">
        <available file="${as.home}/modules" type="dir"/>
    </condition>

    <!-- Check if we are running JAVA SE 6 --> 
    <condition property="jdk6+">
        <or>
            <contains string="${@java.version.string@}" substring="1.6.0"/>
            <contains string="${@java.version.string@}" substring="1.7.0"/>
        </or>
    </condition>

    <target name="jdk-message" if="jdk6+">
        <echo message="Metro is being installed using Java SE ${@java.version.string@}."/>
        <echo/>
        <echo message="  ${product.name} provides JAX-WS API ${jaxws-api.version} while Java SE ${@java.version.string@} includes"/>
        <echo message="  another version. If you want to run Metro applications"/>
        <echo message="  outside GlassFish you will need to use the endorsed"/>
        <echo message="  standards override mechanism. For more details see"/>
        <echo message="  http://download.oracle.com/javase/6/docs/technotes/guides/standards/index.html"/>
        <echo/>
        <echo message="  If you want to enable JAX-WS ${jaxws-api.version} for all applications"/>
        <echo message="  running under Java SE ${@java.version.string@}, you may run the command"/>
        <echo message="  'ant install-api'."/>
        <echo message="  That command will copy the file webservices-api.jar to"/>
        <echo message="  ${@java.home.string@}/lib/endorsed."/>
        <echo message="  The command needs to be run by a user that has the"/>
        <echo message="  permissions to copy files into ${@java.home.string@}/lib/endorsed."/>
        <echo/>
        <echo message="  NOTE that any Java application that incidentally"/>
        <echo message="  uses one of the APIs included in Metro but does"/>
        <echo message="  not have all Metro JARs on its classpath may"/>
        <echo message="  experience class loading issues if you proceed with"/>
        <echo message="  'install-api'."/>
        <echo/>
    </target>

    <target name="warning-note">
        <echo message="NOTE: This installation script is a work in progress and works only with GlassFish v4 or later."/>
        <echo />
        <echo message="  Metro installations via this scripts are not officially supported!"/>
        <echo />
        <echo message="  This script moves default domain osgi cache directory"/>
        <echo message="  ${as.home}/domains/domain1/osgi.cache directory under ${backup.dir}."/>
        <echo message="  If your Glassfish installation consists of different than"/>
        <echo message="  default domain setup, osgi-cache directory for each of"/>
        <echo message="  the domains has to be deleted manually before restarting Glassfish."/>
        <echo />
    </target>

    <target name="gf-message" unless="glassfish">
        <echo message="NOTE: This script can only install Metro on GlassFish 4.x."/>
        <echo/>
    </target>

    <target name="ashome-test" unless="as.home.exists">
        <fail message="The environment variable AS_HOME was not set or does not point to an existing directory."/>
    </target>

    <target name="gf-test" unless="glassfish">
        <antcall target="gf-message"/>
        <fail message="It looks like you are trying to install Metro on older GlassFish version."/>
    </target>

    <target name="init" depends="ashome-test, gf-test"/>

    <target name="backup" if="notInstalled"
            description="Back-up existing Metro jars">
        <echo message="Creating a back-up of default Metro installation..."/>

        <mkdir dir="${backup.dir}"/>
        <copy todir="${backup.dir}" failonerror="false">
            <fileset dir="${as.lib.home}">
                <include name="webservices-osgi.jar"/>
                <include name="webservices-extra-jdk-packages.jar"/>
                <include name="woodstox-core.jar"/>
                <include name="stax2-api.jar"/>
                <include name="jaxb-osgi.jar"/>
                <include name="xmlsec.jar"/>
                <include name="commons-logging.jar"/>
            </fileset>
            <fileset dir="${as.lib.home}/endorsed">
                <include name="webservices-api-osgi.jar"/>
                <include name="jaxb-api-osgi.jar"/>
            </fileset>
        </copy>
        <move todir="${backup.dir}" failonerror="false">
            <fileset dir="${osgi.cache.dir}"/>
        </move>
        <echo message="...done: You can find the original Metro files stored in ${backup.dir}"/>
        <echo message="To restore the original Metro installation, run this script with 'uninstall' target"/>
    </target>

    <target name="install" depends="init, backup, check-api" description="Install latest Metro jars">
        <antcall target="warning-note" />
        <echo message="Installing ${product.name} on ${as.home} ..."/>
        <echo />

        <copy todir="${as.lib.home}" overwrite="true">
            <fileset dir="osgi">
                <include name="webservices-osgi.jar"/>
                <include name="webservices-extra-jdk-packages.jar"/>
                <include name="woodstox-core.jar"/>
                <include name="stax2-api.jar"/>
                <include name="jaxb-osgi.jar"/>
                <include name="xmlsec.jar"/>
                <include name="commons-logging.jar"/>
            </fileset>  
        </copy>
        <copy todir="${as.lib.home}/endorsed" overwrite="true">
            <fileset dir="osgi">
                <include name="webservices-api-osgi.jar"/>
                <include name="jaxb-api-osgi.jar"/>
            </fileset>
        </copy>
        <echo message="... installation complete."/>
    </target>

    <target name="test-api" description="Test if 'webservices-api.jar' is already installed in $JAVA_HOME/lib/endorsed" if="jdk6+">
        <echo message="${@java.home.string@}/lib/endorsed/webservices-api.jar"/>
        <available property="api.installed" file="${@java.home.string@}/lib/endorsed/webservices-api.jar"/>
    </target>

    <target name="check-api" depends="test-api" if="api.installed"
            description="Print a warning if 'webservices-api.jar' is found in $JAVA_HOME/lib/endorsed">
        <echo message="Found the file webservices-api.jar in ${@java.home.string@}/lib/endorsed."/>
        <echo/>
        <echo message="  This installation does not automatically overwrite"/>
        <echo message="  'webservices-api.jar' in ${@java.home.string@}/lib/endorsed."/>
        <echo message="  Please execute the command 'ant install-api' to"/>
        <echo message="  update 'webservices-api.jar'."/>
        <echo/>
        <echo message="  NOTE that any Java application that incidentally uses"/>
        <echo message="  one of the APIs included in Metro but does not"/>
        <echo message="  have all Metro JARs on its classpath may experience"/>
        <echo message="  class loading issues if you install webservices-api.jar"/>
        <echo message="  into ${@java.home.string@}/lib/endorsed."/>
    </target>

    <target name="install-api" if="jdk6+" depends="init"
            description="Installs 'webservices-api.jar' into $JAVA_HOME/lib/endorsed">
        <mkdir dir="${@java.home.string@}/lib/endorsed"/>
        <copy toDir="${@java.home.string@}/lib/endorsed" overwrite="true">
            <fileset dir="lib">
                <include name="webservices-api.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="uninstall" unless="notInstalled"
            depends="init"
            description="Restore original Metro jars and tool scripts">
        <echo message="Uninstalling ${product.name} from ${as.home} ..."/>

        <copy todir="${as.lib.home}" overwrite="true">
            <fileset dir="${backup.dir}">
                <include name="webservices-osgi.jar"/>
                <include name="webservices-extra-jdk-packages.jar"/>
                <include name="woodstox-core.jar"/>
                <include name="stax2-api.jar"/>
                <include name="jaxb-osgi.jar"/>
                <include name="xmlsec.jar"/>
                <include name="commons-logging.jar"/>
            </fileset>
        </copy>

        <copy todir="${as.lib.home}/endorsed" overwrite="true">
            <fileset dir="${backup.dir}">
                <include name="webservices-api-osgi.jar"/>
                <include name="jaxb-api-osgi.jar"/>
            </fileset>
        </copy>

        <delete dir="${backup.dir}" includeemptydirs="true"/>
        <delete dir="${osgi.cache.dir}" includeemptydirs="true"/>

        <echo message="... uninstall complete."/>
        <echo message="The original Metro installation has been restored."/>
    </target>

    <target name="help">
        <echo message="install: "/>
        <echo message="  Installs ${product.name} on GlassFish"/>
        <echo/>
        <echo message="uninstall: "/>
        <echo message="  Uninstalls ${product.name} from GlassFish and restores the original Metro installation"/>
        <echo/>
        <echo message="$AS_HOME must be set to the installation directory of GlassFish. (e.g. '.../glassfish-vX/glassfish')"/>
        <echo/>
        <echo message="Usage:"/>
        <echo message="  ant -f metro-on-glassfish.xml {install | uninstall}"/>
        <antcall target="jdk-message"/>
        <antcall target="gf-message"/>
        <antcall target="warning-note"/>
    </target>

</project>
